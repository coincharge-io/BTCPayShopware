!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/bundles/shopwarebtcpay/",n(n.s="W/6q")}({"9HF9":function(e){e.exports=JSON.parse('{"coincharge-btcpay-generate-key":{"button":"Generate API key","error":"Provided url isn\'t valid"},"coincharge-btcpay-test-connection":{"success":"Connection was successfully established","error":"Connection could not be established. Please check your API credentials","button":"Test connection"}}')},Jkf5:function(e,t){e.exports='<div>\n\t<sw-button-process :isloading="isLoading" @click="createWebhook">{{ $tc(\'coincharge-btcpay-generate-key.button\') }}</sw-button-process>\n</div>\n'},"W/6q":function(e,t,n){"use strict";n.r(t);var o=n("lE2+"),r=n.n(o),i=Shopware,c=i.Component,a=i.Mixin;c.register("coincharge-btcpay-generate-key",{template:r.a,inject:["coinchargeBtcpayApiService"],mixins:[a.getByName("notification")],data:function(){return{isLoading:!1}},methods:{generate:function(){var e=document.getElementById("ShopwareBTCPay.config.btcpayServerUrl").value,t=this.removeTrailingSlash(e);return this.isLoading=!0,window.open(t+"/api-keys/authorize/?applicationName=BTCPay%20Shopware%20plugin&permissions=btcpay.store.cancreateinvoice&permissions=btcpay.store.canviewinvoices&permissions=btcpay.store.webhooks.canmodifywebhooks&selectiveStores=true","_blank")},removeTrailingSlash:function(e){return e.replace(/\/$/,"")}}});var s=n("irp2"),u=n.n(s),p=Shopware,f=p.Component,l=p.Mixin;f.register("coincharge-btcpay-test-connection",{template:u.a,inject:["coinchargeBtcpayApiService"],mixins:[l.getByName("notification")],data:function(){return{isLoading:!1}},methods:{check:function(){var e=this;this.isLoading=!0,this.coinchargeBtcpayApiService.verifyApiKey().then((function(t){if(!1===t.success)return e.createNotificationWarning({title:"BTCPay Server",message:e.$tc("coincharge-btcpay-test-connection.error")}),void(e.isLoading=!1);e.createNotificationSuccess({title:"BTCPay Server",message:e.$tc("coincharge-btcpay-test-connection.success")}),e.isLoading=!1}))}}});var y=n("Jkf5"),h=n.n(y),d=Shopware,b=d.Component,g=d.Mixin;function v(e){return(v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function S(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function w(e,t){return(w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function k(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,o=B(e);if(t){var r=B(this).constructor;n=Reflect.construct(o,arguments,r)}else n=o.apply(this,arguments);return P(this,n)}}function P(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function B(e){return(B=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}b.register("coincharge-btcpay-create-webhook",{template:h.a,inject:["coinchargeBtcpayApiService"],mixins:[g.getByName("notification")],data:function(){return{isLoading:!1}},methods:{createWebhook:function(){var e=this;this.isLoading=!0,this.coinchargeBtcpayApiService.generateWebhook().then((function(t){if(!1===t.success)return e.createNotificationWarning({title:"BTCPay Server",message:e.$tc("coincharge-btcpay-test-connection.error")}),void(e.isLoading=!1);document.getElementById("ShopwareBTCPay.config.btcpayWebhookSecret").value=t.data.secret,e.createNotificationSuccess({title:"BTCPay Server",message:e.$tc("coincharge-btcpay-test-connection.success")}),e.isLoading=!1}))}}});var O=Shopware.Classes.ApiService,j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&w(e,t)}(i,e);var t,n,o,r=k(i);function i(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"btcpay";return m(this,i),r.call(this,e,t,n)}return t=i,(n=[{key:"verifyApiKey",value:function(){var e="/_action/".concat(this.getApiBasePath(),"/verify"),t=this.getBasicHeaders();return this.httpClient.get(e,{headers:t}).then((function(e){return O.handleResponse(e)}))}},{key:"generateWebhook",value:function(){var e="/_action/".concat(this.getApiBasePath(),"/webhook");return this.httpClient.post(e,{},{headers:this.getBasicHeaders()}).then((function(e){return O.handleResponse(e)})).catch((function(e){throw console.error("Webhook couldn't be created: "+e.message),e}))}}])&&S(t.prototype,n),o&&S(t,o),Object.defineProperty(t,"prototype",{writable:!1}),i}(O),x=n("9HF9"),C=n("z6Wy"),L=Shopware.Application;L.addServiceProvider("coinchargeBtcpayApiService",(function(e){var t=L.getContainer("init");return new j(t.httpClient,e.loginService)})),Shopware.Locale.extend("de-DE",x),Shopware.Locale.extend("en-GB",C)},irp2:function(e,t){e.exports='<div>\n    <sw-button-process\n        :isLoading="isLoading"\n        @click="check"\n    >{{ $tc(\'coincharge-btcpay-test-connection.button\') }}</sw-button-process>\n</div>'},"lE2+":function(e,t){e.exports='<div>\n    <sw-button-process\n        :isLoading="isLoading"\n        @click="generate"\n    >{{ $tc(\'coincharge-btcpay-generate-key.button\') }}</sw-button-process>\n</div>'},z6Wy:function(e){e.exports=JSON.parse('{"coincharge-btcpay-generate-key":{"button":"Generate API key","error":"Provided url isn\'t valid"},"coincharge-btcpay-test-connection":{"success":"Connection was successfully established","error":"Connection could not be established. Please check your API credentials","button":"Test connection"}}')}});