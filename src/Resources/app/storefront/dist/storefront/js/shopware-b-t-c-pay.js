(window.webpackJsonp=window.webpackJsonp||[]).push([["shopware-b-t-c-pay"],{rdNs:function(t,e,n){"use strict";n.r(e);var o=n("FGIj"),r=n("p4AR");function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function c(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function a(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function s(t,e){return!e||"object"!==i(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function u(t){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function p(t,e){return(p=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var f=function(t){function e(){return c(this,e),s(this,u(e).apply(this,arguments))}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&p(t,e)}(e,t),n=e,(o=[{key:"init",value:function(){this._client=new r.a,this.button=this.el.children["btcpay-button"];var t=document.createElement("script");t.src="https://coinsnap.io/modal/btcpay.js",document.head.appendChild(t),this._registerEvents()}},{key:"_registerEvents",value:function(){this.button.onclick=this._showInvoice.bind(this)}},{key:"_showInvoice",value:function(){var t=this;this._client.post("/store-api/btcpay/invoice",JSON.stringify({}),(function(e){var n=JSON.parse(e);window.btcpay.showInvoice(n.message.id),t._checkInvoiceStatus()}))}},{key:"_checkInvoiceStatus",value:function(){var t=this;window.btcpay.onModalReceiveMessage((function(e){"complete"===e.data.status&&t._client.get("/store-api/btcpay/invoice",(function(t){var e=JSON.parse(t);console.log({isPaid:e})}))}))}}])&&a(n.prototype,o),i&&a(n,i),e}(o.a);window.PluginManager.register("BtcpayModal",f,"[data-btcpay-modal]")}},[["rdNs","runtime","vendor-node","vendor-shared"]]]);